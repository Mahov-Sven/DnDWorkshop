/* IN THE JAVASCRIPT */
// All Caps = JavaScript object type

Property(){
	type: STRING ? "Property";
	value: VAR;
	mutable: BOOLEAN ? false;
}

Function(code){
	type: STRING ? "Function";
	value: FUNCTION ? (this.code);
};

String(value){
	type: STRING ? "String";
	value: STRING ? value;
}

Decimal(value){
	type: STRING ? "Decimal";
	value : NUMBER ? value;
}

Integer(value){
	type: STRING ? "Integer";
	value: NUMBER ? INT(value);
}

Boolean(value){
	type: STRING ? "Property";
	value: VAR;
	mutable: BOOLEAN ? true;
}

/* --------------- */

State(name){
	name: STRING ? name;
}

AbilityScore(){
	name: String;
	abbreviation: Function ? (return: SUBSTR(this.name, 0, 2) );
	score: Integer ? 10;
	modifier: Function ? (return: INT(this.score - 10) / 2 );
}

/* COMPILED DNDRB VERSION *

AbilityScore<Property>():{
	type: STRING ? "AbilityScore";
	value: VAR ? null;
	path: STRING ? "AbilityScore_value";
	
	name: String ? String(null);
	abbreviation: Function ? Function(return: this.name)
	score: Integer ? Integer(10);
	modifier: Function ? Function(return: INT(this.score - 10) / 2 );
}

/* ---------------- */

/* COMPILED JSON VERSION *

"AbilityScore":{
	"type": "AbilityScore",
	"value": "AbilityScore",
	
	"name":{
		"type": "String",
		"value": null
		}
	},
	"abbreviation":{
		"type": "Function",
		"value": "AbilityScore_abbreviation_value"
		}
	},
	"score": {
		
	}
}

/* ---------------- */
