/* IN THE JAVASCRIPT */
// All Caps = JavaScript object type

Primitive(value){
	this.value = this.set(value);
	this.get = Function((){
		return: this.value;
	});
	this.set = Function((value){
		this.value = value;
	});
}

Boolean<Primitive>(bool){
	this.set = Function((bool){
		if(typeof(bool) == boolean,{
			this.value = value;
		},{
			// ELSE DO NOTHING
		});
	});
}

String<Primitive>(str){
	this.set = Function((str){
		if(typeof(str) == string,{
			this.value = value;
		},{
			// ELSE DO NOTHING
		});
	});
}

Integer<Primitive>(numb){
	this.set = Function((numb){
		if(typeof(numb) == number,{
			this.value = floor(value);
		},{
			// ELSE DO NOTHING
		});
	});
}

Decimal<Primitive>(numb){
	this.set = Function((numb){
		if(typeof(numb) == number,{
			this.value = value;
		},{
			// ELSE DO NOTHING
		});
	});
}

Property<Primitive>(value){
	this.value = this.set(value);
	this.mutable = Boolean(true);
	this.set = Function((value){
		if(this.mutable.get() == true,{
			this.value = value;
		},{
			// ELSE DO NOTHING
		});
	});
}

Dice(sides){
	this.sides = Integer(sides);
	this.roll = Function((){
		return: randomInt(1, this.sides.get());
	});
}

// Examples
/*
AbilityScore<NamedProperty>(name, value){
	this.name = String(name);
	this.abreviation = Function((){
		return: substring(this.name.get(), 0, 3);
	});
	this.value = Integer(value);
	this.modifier = Function((){
		return: floor((this.value.get() - 10) / 2);
	});
}
*/